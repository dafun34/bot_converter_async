name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  generate_env:
    runs-on: ubuntu-latest
    steps:
      - name: Placeholder for Generate Env
        run: echo "This is a placeholder for generating the .env file."

  deploy:
    runs-on: ubuntu-latest
    needs: generate_env
    steps:
      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_SERVER }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Define project path (make sure it's set in secrets)
            PROJECT_PATH=${{ secrets.PROJECT_PATH }}

            # Ensure the project directory exists
            mkdir -p $PROJECT_PATH

            # Create .env file on the server
            cat <<EOF > $PROJECT_PATH/.env
            BOT_TOKEN=${{ secrets.BOT_TOKEN }}
            BOT_PROD_TOKEN=${{ secrets.BOT_PROD_TOKEN }}
            YANDEXAPIKEY=${{ secrets.YANDEXAPIKEY }}
            OPENAI_TOKEN=${{ secrets.OPENAI_TOKEN }}

            DB_DRIVER=${{ secrets.DB_DRIVER }}
            DB_NAME=${{ secrets.DB_NAME }}
            DB_USER=${{ secrets.DB_USER }}
            DB_PASS=${{ secrets.DB_PASS }}
            DB_HOST=${{ secrets.DB_HOST }}
            DB_PORT=${{ secrets.DB_PORT }}
            ALLOWED_HOST=${{ secrets.ALLOWED_HOST }}
            ADMIN_USERNAME=${{ secrets.ADMIN_USERNAME }}
            ADMIN_PASS=${{ secrets.ADMIN_PASS }}
            EOF

            # Update project and restart services
            cd $PROJECT_PATH
            git pull origin main
            docker compose down
            docker compose up --build -d
